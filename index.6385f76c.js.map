{"mappings":"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","sources":["<anon>","build/script.js"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire813d\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire813d\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $mjrTk = parcelRequire(\"mjrTk\");\nlet $c8910ba8ef731b1f$var$a, $c8910ba8ef731b1f$var$b, $c8910ba8ef731b1f$var$c;\nlet $c8910ba8ef731b1f$var$attempts = 0;\nlet $c8910ba8ef731b1f$var$chart;\nlet $c8910ba8ef731b1f$var$state = (0, $mjrTk.loadState)();\nfunction $c8910ba8ef731b1f$var$generateCoefficients() {\n    const today = new Date();\n    const seed = today.getFullYear() * 10000 + (today.getMonth() + 1) * 100 + today.getDate();\n    const rng = new window.Math.seedrandom(seed);\n    $c8910ba8ef731b1f$var$a = Math.floor(rng() * 21) - 10; // -10 to 10\n    $c8910ba8ef731b1f$var$b = Math.floor(rng() * 41) - 20; // -20 to 20\n    $c8910ba8ef731b1f$var$c = Math.floor(rng() * 101) - 50; // -50 to 50\n    if ($c8910ba8ef731b1f$var$a === 0) $c8910ba8ef731b1f$var$a = 1;\n}\nfunction $c8910ba8ef731b1f$var$plotQuadratic() {\n    const ctx = document.getElementById(\"quadraticChart\").getContext(\"2d\");\n    const xValues = Array.from({\n        length: 201\n    }, (_, i)=>(i - 100) / 10);\n    const yValues = xValues.map((x)=>$c8910ba8ef731b1f$var$a * x * x + $c8910ba8ef731b1f$var$b * x + $c8910ba8ef731b1f$var$c);\n    if ($c8910ba8ef731b1f$var$chart) $c8910ba8ef731b1f$var$chart.destroy();\n    $c8910ba8ef731b1f$var$chart = new Chart(ctx, {\n        type: \"line\",\n        data: {\n            labels: xValues,\n            datasets: [\n                {\n                    label: \"Quadratic Function\",\n                    data: yValues,\n                    borderColor: \"rgb(75, 192, 192)\",\n                    tension: 0.1\n                }\n            ]\n        },\n        options: {\n            responsive: true,\n            scales: {\n                x: {\n                    type: \"linear\",\n                    position: \"center\",\n                    title: {\n                        display: true,\n                        text: \"x\"\n                    }\n                },\n                y: {\n                    type: \"linear\",\n                    position: \"center\",\n                    title: {\n                        display: true,\n                        text: \"y\"\n                    }\n                }\n            },\n            plugins: {\n                title: {\n                    display: true,\n                    text: \"Parabole: y = ax\\xb2 + bx + c\"\n                }\n            }\n        }\n    });\n}\nfunction $c8910ba8ef731b1f$var$checkGuess() {\n    if ($c8910ba8ef731b1f$var$state.todaySolved) {\n        alert(\"You've already solved today's Parabole. Refresh the page for a new puzzle!\");\n        return;\n    }\n    $c8910ba8ef731b1f$var$attempts++;\n    const guessA = parseInt(document.getElementById(\"guessA\").value);\n    const guessB = parseInt(document.getElementById(\"guessB\").value);\n    const guessC = parseInt(document.getElementById(\"guessC\").value);\n    let hints = \"\";\n    hints += $c8910ba8ef731b1f$var$getHintHTML(\"a\", guessA, $c8910ba8ef731b1f$var$a);\n    hints += $c8910ba8ef731b1f$var$getHintHTML(\"b\", guessB, $c8910ba8ef731b1f$var$b);\n    hints += $c8910ba8ef731b1f$var$getHintHTML(\"c\", guessC, $c8910ba8ef731b1f$var$c);\n    document.getElementById(\"hints\").innerHTML = hints;\n    document.getElementById(\"attempts\").textContent = `Attempts: ${$c8910ba8ef731b1f$var$attempts}`;\n    if (guessA === $c8910ba8ef731b1f$var$a && guessB === $c8910ba8ef731b1f$var$b && guessC === $c8910ba8ef731b1f$var$c) {\n        $c8910ba8ef731b1f$var$state.lastSolved = new Date();\n        $c8910ba8ef731b1f$var$state.streak++;\n        $c8910ba8ef731b1f$var$state.totalPlayed++;\n        $c8910ba8ef731b1f$var$state.totalSolved++;\n        $c8910ba8ef731b1f$var$updateStats();\n        alert(`Congratulations! You've solved today's Parabole: ${$c8910ba8ef731b1f$var$a}x\\xb2 + ${$c8910ba8ef731b1f$var$b}x + ${$c8910ba8ef731b1f$var$c}\\nYou solved it in ${$c8910ba8ef731b1f$var$attempts} attempts.`);\n    }\n}\nfunction $c8910ba8ef731b1f$var$getHintHTML(coefficient, guess, actual) {\n    let iconClass, color;\n    if (guess === actual) {\n        iconClass = \"fa-check\";\n        color = \"green\";\n    } else if (guess < actual) {\n        iconClass = \"fa-arrow-up\";\n        color = \"red\";\n    } else {\n        iconClass = \"fa-arrow-down\";\n        color = \"blue\";\n    }\n    return `\n            <div class=\"hint\">\n                <span>${coefficient}</span>\n                <i class=\"hint-icon fas ${iconClass}\" style=\"color: ${color};\"></i>\n            </div>\n        `;\n}\nfunction $c8910ba8ef731b1f$var$updateStats() {\n    const statsDiv = document.getElementById(\"stats\");\n    statsDiv.innerHTML = `\n            Streak: ${$c8910ba8ef731b1f$var$state.streak}<br>\n            Win %: ${Math.round($c8910ba8ef731b1f$var$state.totalSolved / $c8910ba8ef731b1f$var$state.totalPlayed * 100) || 0}%<br>\n            Total Played: ${$c8910ba8ef731b1f$var$state.totalPlayed}\n        `;\n    (0, $mjrTk.saveState)($c8910ba8ef731b1f$var$state);\n}\nfunction $c8910ba8ef731b1f$var$updateCountdown() {\n    const now = new Date();\n    const tomorrow = new Date(now.getFullYear(), now.getMonth(), now.getDate() + 1);\n    const timeLeft = tomorrow - now;\n    const hours = Math.floor(timeLeft / 3600000);\n    const minutes = Math.floor(timeLeft % 3600000 / 60000);\n    const seconds = Math.floor(timeLeft % 60000 / 1000);\n    document.getElementById(\"countdown\").textContent = `Next Parabole in: ${hours}h ${minutes}m ${seconds}s`;\n}\nfunction $c8910ba8ef731b1f$var$initializeGame() {\n    $c8910ba8ef731b1f$var$generateCoefficients();\n    $c8910ba8ef731b1f$var$plotQuadratic();\n    $c8910ba8ef731b1f$var$updateStats();\n    $c8910ba8ef731b1f$var$updateCountdown();\n    setInterval($c8910ba8ef731b1f$var$updateCountdown, 1000);\n}\nwindow.onload = function() {\n    if (typeof window.Math.seedrandom === \"function\") $c8910ba8ef731b1f$var$initializeGame();\n    else {\n        console.error(\"seedrandom library not loaded properly\");\n        document.getElementById(\"hints\").innerHTML = \"Error: Game could not be initialized. Please try refreshing the page.\";\n    }\n};\ndocument.querySelector(\"#guess\").addEventListener(\"click\", $c8910ba8ef731b1f$var$checkGuess);\nif ((0, $mjrTk.todaySolved)($c8910ba8ef731b1f$var$state)) {\n    document.getElementById(\"guessContainer\").style.display = \"none\";\n    document.getElementById(\"attempts\").style.display = \"none\";\n    document.getElementById(\"alreadySolved\").style.display = \"flex\";\n}\n\n\n//# sourceMappingURL=index.6385f76c.js.map\n","import {loadState, saveState, todaySolved} from \"./state.js\";\n\nlet a, b, c;\nlet attempts = 0;\nlet chart;\nlet state = loadState();\n\nfunction generateCoefficients() {\n    const today = new Date();\n    const seed = today.getFullYear() * 10000 + (today.getMonth() + 1) * 100 + today.getDate();\n\n    const rng = new window.Math.seedrandom(seed);\n\n    a = Math.floor(rng() * 21) - 10; // -10 to 10\n    b = Math.floor(rng() * 41) - 20; // -20 to 20\n    c = Math.floor(rng() * 101) - 50; // -50 to 50\n\n    if (a === 0) a = 1;\n}\n\nfunction plotQuadratic() {\n    const ctx = document.getElementById('quadraticChart').getContext('2d');\n    const xValues = Array.from({length: 201}, (_, i) => (i - 100) / 10);\n    const yValues = xValues.map(x => a * x * x + b * x + c);\n\n    if (chart) {\n        chart.destroy();\n    }\n\n    chart = new Chart(ctx, {\n        type: 'line',\n        data: {\n            labels: xValues,\n            datasets: [{\n                label: 'Quadratic Function',\n                data: yValues,\n                borderColor: 'rgb(75, 192, 192)',\n                tension: 0.1\n            }]\n        },\n        options: {\n            responsive: true,\n            scales: {\n                x: {type: 'linear', position: 'center', title: {display: true, text: 'x'}},\n                y: {type: 'linear', position: 'center', title: {display: true, text: 'y'}}\n            },\n            plugins: {\n                title: {display: true, text: 'Parabole: y = ax² + bx + c'}\n            }\n        }\n    });\n}\n\nfunction checkGuess() {\n    if (state.todaySolved) {\n        alert(\"You've already solved today's Parabole. Refresh the page for a new puzzle!\");\n        return;\n    }\n\n    attempts++;\n    const guessA = parseInt(document.getElementById('guessA').value);\n    const guessB = parseInt(document.getElementById('guessB').value);\n    const guessC = parseInt(document.getElementById('guessC').value);\n\n    let hints = '';\n    hints += getHintHTML('a', guessA, a);\n    hints += getHintHTML('b', guessB, b);\n    hints += getHintHTML('c', guessC, c);\n\n    document.getElementById('hints').innerHTML = hints;\n    document.getElementById('attempts').textContent = `Attempts: ${attempts}`;\n\n    if (guessA === a && guessB === b && guessC === c) {\n        state.lastSolved = new Date();\n        state.streak++;\n        state.totalPlayed++;\n        state.totalSolved++;\n        updateStats();\n        alert(`Congratulations! You've solved today's Parabole: ${a}x² + ${b}x + ${c}\\nYou solved it in ${attempts} attempts.`);\n    }\n}\n\nfunction getHintHTML(coefficient, guess, actual) {\n    let iconClass, color;\n    if (guess === actual) {\n        iconClass = 'fa-check';\n        color = 'green';\n    } else if (guess < actual) {\n        iconClass = 'fa-arrow-up';\n        color = 'red';\n    } else {\n        iconClass = 'fa-arrow-down';\n        color = 'blue';\n    }\n    return `\n            <div class=\"hint\">\n                <span>${coefficient}</span>\n                <i class=\"hint-icon fas ${iconClass}\" style=\"color: ${color};\"></i>\n            </div>\n        `;\n}\n\nfunction updateStats() {\n    const statsDiv = document.getElementById('stats');\n    statsDiv.innerHTML = `\n            Streak: ${state.streak}<br>\n            Win %: ${Math.round((state.totalSolved / state.totalPlayed) * 100) || 0}%<br>\n            Total Played: ${state.totalPlayed}\n        `;\n    saveState(state);\n}\n\nfunction updateCountdown() {\n    const now = new Date();\n    const tomorrow = new Date(now.getFullYear(), now.getMonth(), now.getDate() + 1);\n    const timeLeft = tomorrow - now;\n    const hours = Math.floor(timeLeft / (1000 * 60 * 60));\n    const minutes = Math.floor((timeLeft % (1000 * 60 * 60)) / (1000 * 60));\n    const seconds = Math.floor((timeLeft % (1000 * 60)) / 1000);\n\n    document.getElementById('countdown').textContent = `Next Parabole in: ${hours}h ${minutes}m ${seconds}s`;\n}\n\nfunction initializeGame() {\n    generateCoefficients();\n    plotQuadratic();\n    updateStats();\n    updateCountdown();\n    setInterval(updateCountdown, 1000);\n}\n\nwindow.onload = function () {\n    if (typeof window.Math.seedrandom === 'function') {\n        initializeGame();\n    } else {\n        console.error('seedrandom library not loaded properly');\n        document.getElementById('hints').innerHTML = 'Error: Game could not be initialized. Please try refreshing the page.';\n    }\n};\n\ndocument.querySelector('#guess').addEventListener('click', checkGuess)\n\nif (todaySolved(state)) {\n    document.getElementById(\"guessContainer\").style.display = 'none';\n    document.getElementById(\"attempts\").style.display = 'none';\n    document.getElementById(\"alreadySolved\").style.display = 'flex';\n}"],"names":["$c8910ba8ef731b1f$var$a","$c8910ba8ef731b1f$var$b","$c8910ba8ef731b1f$var$c","$c8910ba8ef731b1f$var$chart","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$mjrTk","$c8910ba8ef731b1f$var$attempts","$c8910ba8ef731b1f$var$state","loadState","$c8910ba8ef731b1f$var$getHintHTML","coefficient","guess","actual","iconClass","color","$c8910ba8ef731b1f$var$updateStats","statsDiv","document","getElementById","innerHTML","streak","Math","round","totalSolved","totalPlayed","saveState","$c8910ba8ef731b1f$var$updateCountdown","now","Date","timeLeft","tomorrow","getFullYear","getMonth","getDate","hours","floor","minutes","seconds","textContent","window","onload","seedrandom","$c8910ba8ef731b1f$var$generateCoefficients","today","seed","rng","$c8910ba8ef731b1f$var$plotQuadratic","ctx","getContext","xValues","Array","from","length","_","i","yValues","map","x","destroy","Chart","type","data","labels","datasets","label","borderColor","tension","options","responsive","scales","position","title","display","text","y","plugins","setInterval","console","error","querySelector","addEventListener","todaySolved","alert","guessA","parseInt","value","guessB","guessC","hints","lastSolved","style"],"version":3,"file":"index.6385f76c.js.map"}