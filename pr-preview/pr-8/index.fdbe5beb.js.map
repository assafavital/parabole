{"mappings":"A,S,E,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,A,C,E,E,Q,A,E,Q,S,C,C,C,E,E,E,O,C,Y,I,G,E,E,O,C,Y,I,G,E,E,O,C,c,I,ECAA,OAAM,EACF,YAAY,CAAC,CAAE,CACX,IAAI,CAAC,UAAU,CAAG,EAAE,UAAU,CAC9B,IAAI,CAAC,MAAM,CAAG,EAAE,MAAM,CACtB,IAAI,CAAC,WAAW,CAAG,EAAE,WAAW,CAChC,IAAI,CAAC,WAAW,CAAG,EAAE,WAAW,AACpC,CACJ,CAEO,SAAS,EAAU,CAAK,EAC3B,aAAa,OAAO,CAAC,QAAS,KAAK,SAAS,CAAC,GACjD,CAEO,SAAS,IACZ,IAAM,EAAQ,aAAa,OAAO,CAAC,SACnC,OAAO,EAAQ,KAAK,KAAK,CAAC,GAAS,IAAI,EAAM,CACzC,WAAY,KACZ,OAAQ,EACR,YAAa,EACb,YAAa,CACjB,EACJ,CAEO,SAAS,EAAY,CAAK,EAC7B,GAAI,AAAoB,MAApB,EAAM,UAAU,CAChB,MAAO,CAAA,EAGX,IAAI,EAAM,IAAI,KACV,EAAa,IAAI,KAAK,EAAM,UAAU,EAC1C,OAAO,EAAI,WAAW,KAAO,EAAW,WAAW,IAC/C,EAAI,QAAQ,KAAO,EAAW,QAAQ,IACtC,EAAI,OAAO,KAAO,EAAW,OAAO,EAC5C,C,G,E","sources":["<anon>","build/state.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire813d\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire813d\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"mjrTk\", function(module, exports) {\n\n$parcel$export(module.exports, \"saveState\", () => $04312453e661eaaa$export$fb931cd598921492);\n$parcel$export(module.exports, \"loadState\", () => $04312453e661eaaa$export$ea32cbdd559da174);\n$parcel$export(module.exports, \"todaySolved\", () => $04312453e661eaaa$export$d67e4fe0171959d9);\nclass $04312453e661eaaa$var$State {\n    constructor(s){\n        this.lastSolved = s.lastSolved;\n        this.streak = s.streak;\n        this.totalPlayed = s.totalPlayed;\n        this.totalSolved = s.totalSolved;\n    }\n}\nfunction $04312453e661eaaa$export$fb931cd598921492(state) {\n    localStorage.setItem(\"state\", JSON.stringify(state));\n}\nfunction $04312453e661eaaa$export$ea32cbdd559da174() {\n    const state = localStorage.getItem(\"state\");\n    return state ? JSON.parse(state) : new $04312453e661eaaa$var$State({\n        lastSolved: null,\n        streak: 0,\n        totalPlayed: 0,\n        totalSolved: 0\n    });\n}\nfunction $04312453e661eaaa$export$d67e4fe0171959d9(state) {\n    if (state.lastSolved == null) return false;\n    let now = new Date();\n    let lastSolved = new Date(state.lastSolved);\n    return now.getFullYear() === lastSolved.getFullYear() && now.getMonth() === lastSolved.getMonth() && now.getDate() === lastSolved.getDate();\n}\n\n});\n\n\nparcelRequire(\"mjrTk\");\n\n//# sourceMappingURL=index.fdbe5beb.js.map\n","class State {\n    constructor(s) {\n        this.lastSolved = s.lastSolved;\n        this.streak = s.streak;\n        this.totalPlayed = s.totalPlayed;\n        this.totalSolved = s.totalSolved;\n    }\n}\n\nexport function saveState(state) {\n    localStorage.setItem('state', JSON.stringify(state));\n}\n\nexport function loadState() {\n    const state = localStorage.getItem('state');\n    return state ? JSON.parse(state) : new State({\n        lastSolved: null,\n        streak: 0,\n        totalPlayed: 0,\n        totalSolved: 0,\n    });\n}\n\nexport function todaySolved(state) {\n    if (state.lastSolved == null) {\n        return false\n    }\n\n    let now = new Date();\n    let lastSolved = new Date(state.lastSolved);\n    return now.getFullYear() === lastSolved.getFullYear() &&\n        now.getMonth() === lastSolved.getMonth() &&\n        now.getDate() === lastSolved.getDate();\n}\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","$04312453e661eaaa$export$fb931cd598921492","$04312453e661eaaa$export$ea32cbdd559da174","$04312453e661eaaa$export$d67e4fe0171959d9","$04312453e661eaaa$var$State","constructor","lastSolved","streak","totalPlayed","totalSolved","state","localStorage","setItem","JSON","stringify","getItem","parse","now","Date","getFullYear","getMonth","getDate"],"version":3,"file":"index.fdbe5beb.js.map"}